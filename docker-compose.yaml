name: ecommerce-app

services:
  cache:
    image: redis:latest
    restart: always
    ports:
      - "6379:${REDIS_PORT}"

  recommend:
    image: ecommerce-recommender:latest
    build: ./recommender
    depends_on:
      - db
      - cache
    environment:
      - APP_HOST=${REC_HOST}
      - APP_PORT=${REC_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REC_COUNT=${REC_COUNT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}

  backend:
    image: ecommerce-backend:latest
    build: ./back
    depends_on:
      - db
      - recommend
    environment:
      - APP_HOST=${APP_HOST}
      - APP_PORT=${APP_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - REC_HOST=${REC_HOST}
      - REC_PORT=${REC_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PSWD_HASH_SALT=${PSWD_HASH_SALT}
      - SECRET=${SECRET}
      - TOKEN_EXPIRES=${TOKEN_EXPIRES}

    ports:
      - ${APP_PORT}:${APP_PORT}
    

  db:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - ${DB_PORT}:27017
      
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - db-data:/data/db

  front:
    image: ecommerce-frontend:latest
    build: ./front
    ports:
      - 4200:80

  qdrant:
    image: qdrant/qdrant
    restart: always
    volumes:
      - qdrant_storage:/qdrant/storage
    environment:
      - QDRANT_LOG_LEVEL=info
    ports:
      - ${QD_PORT}:6333

volumes:
  db-data:
    driver: local
  qdrant_storage:
    driver: local
