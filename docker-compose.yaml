version: '3.8'

services:
  webserver:
    build: ./webserver
    container_name: ecom-webserver
    volumes:
      - ./webserver/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
      - database
    networks:
      - ecom_net
    ports:
      - 80:80
  recommend:
    build: ./recommend
    container_name: ecom-recommend
    depends_on:
      - database
      - cache
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REC_COUNT=${REC_COUNT}
    networks:
      - ecom_net
  frontend:
    build: ./frontend
    container_name: ecom-frontend
    networks:
      - ecom_net
  backend:
    build: ./backend
    container_name: ecom-backend
    depends_on:
      - database
      - cache
    environment:
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PSWD_HASH_SALT=${PSWD_HASH_SALT}
      - SECRET=${SECRET}
      - TOKEN_EXPIRES=${TOKEN_EXPIRES}
    networks:
      - ecom_net
  database:
    build: ./database
    container_name: ecom-database
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    volumes:
      - ./database/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - db-data:/data/db
    networks:
      - ecom_net
  cache:
    build: ./cache
    container_name: ecom-cache
    restart: always
    networks:
      - ecom_net

volumes:
  db-data:
    driver: local
  qdrant_storage:
    driver: local

networks:
  ecom_net:
